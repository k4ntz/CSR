# 使用 NVIDIA CUDA 11.7.1 作为基础镜像
FROM docker.io/nvidia/cuda:11.7.1-cudnn8-devel-ubuntu22.04

# 设置非交互模式，防止 apt-get 交互
ENV DEBIAN_FRONTEND=noninteractive

# 安装基础依赖
RUN apt-get update && apt-get install -y git wget

# 下载 Miniconda 并安装到 /opt/conda
RUN wget -O /tmp/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
    bash /tmp/miniconda.sh -b -p /opt/conda && \
    rm /tmp/miniconda.sh
    
# 配置 Conda 环境变量，使所有用户可用
ENV PATH="/opt/conda/bin:$PATH"

# 创建 Conda 环境, 安装依赖
RUN conda create -n atari python=3.9.12

# 设置 Conda 环境的默认激活
SHELL ["/bin/bash", "-c"]
RUN source activate atari && \
    apt update && apt install -y software-properties-common && \
    add-apt-repository ppa:deadsnakes/ppa -y && \
    apt update

RUN source activate atari && \
    apt install -y build-essential cmake zlib1g-dev libjpeg-dev \
    python3.9-dev libsdl1.2-dev libsdl-image1.2-dev \
    libsdl-mixer1.2-dev libsdl-ttf2.0-dev \
    libsmpeg-dev libportmidi-dev libswscale-dev \
    libavformat-dev libavcodec-dev

RUN source activate atari && \
    pip install ale-py==0.7 atari-py==0.2.5 && \
    conda install -y -c conda-forge gym==0.19.0 && \
    pip install pip==23.3
# 下载项目代码并配置其他依赖
WORKDIR /app
RUN git clone https://github.com/k4ntz/CSR.git
RUN source activate atari && \
    cd CSR/atari100k && \
    pip3 install -r requirements.txt

# 进入 Bash 终端
RUN echo "source activate atari" >> ~/.bashrc
CMD ["bash"]
